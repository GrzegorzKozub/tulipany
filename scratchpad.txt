rejestracja uúytkownika (aukcjoner vs licytant)

stworzenie aukcji
   opis, zdjęcia przedmiotu
   cena wywoławcza i cena minimalna
   początek i koniec aukcji
   obliczenie postąpienia

rozpoczecie aukcji
    mozna wejsc na strone
    pokazac strone na liscie

zakonczenie aukcji bez kupna
    ukryc strone z listy
    poinformowac wyswietlajacych

wyswietlenie aukcji
    wszystkie dane, ale tylko cena wywolawcza
    tylko w czasie gdy dostepna
    odświeżanie postąienia
    info o zakonczeniu
    znana cena minimalna? pokaz zegar i cene

kup teraz
    ukryc aukcje
    info dla innych
    problem wyscigu
        lockowanie resourców?
        informacja, że niestety ktoś go ubiegł


obnizenie ceny
    info dla wyswietlajacych
    sprawdzenie czy osiagnieto minimalna -> koniec
    sprawdzenie ofert zaocznych (przed analiza kup teraz, wygrywa wczesniejsza)

moderacja aukcji

wprowadzenie oferty zaocznej
zmiana
wycofanie

pobranie prowizji w przypadku zakupu

htspots:
    wyscig
    wzrost zainteresowanych z onizaniem ceny
    clock display and refresh - syncronized clock
    co w momencie, gdy bedzie duzo aukcji i duzo ofert kup teraz
    jak wyswietlac rzeczy dynamiczne: cene, zegar - api? socket?
    przed wyswietleniem strony - sprawdzenie szybkie czy aukcja otwarta

api musi byc skalowalne i dostepne bo bedzie duzo polaczen jednoczesnie w opcji z web socket
stan w api musi byc dzielony - redis?
zawartosc statyczna moze byc w klastrach redis, a dane przed renderem w sql

scheduler:
    centralizuje czas i uaktualnia klientow
    decyduje o postapieniu i wysyla o tym informacje do klientow
    jak ma to niby wysylac?

tech:
    clock should be centralized: websocket?
    

multiple clients?
    - ui should be dumb

relational db?
file storage?
pre-render auction page for faster display
    makes sense for auctions with displayed clock
cdn
regions



